# -*- coding: utf-8 -*-
"""Breast Cancer Wisconsin (Diagnostic) Detection.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1xd2itl_bfOxgB8UJ4rbnsKXx241gZgSS
"""

import numpy as np
from sklearn import preprocessing, neighbors
from sklearn.model_selection import cross_val_score
from math import sqrt
from sklearn.neighbors import KNeighborsClassifier
import pandas as pd
from sklearn.model_selection import train_test_split

df = pd.read_csv('breast-cancer-wisconsin_dataset.txt')
df.head()

# there are some missing data which are marked as Question mark.
# So, we will replace those datas which are marked as question mark
# Missing attribute values: 16 There are 16 instances in Groups 1 to 6 that contain a single missing 
# (i.e., unavailable) attribute value, now denoted by "?".
   
df.replace('?', -99999, inplace=True)

# we will drop the useless columns which will not be important 
# this will lead our algorithm to stray 

df.drop(['id'],1,inplace=True)
df.head()

# x = np.array(df.drop(['class'],1))
# y = np.array(df['class'])

# x_train, x_test, y_train, y_test = cross_val_score.train_test_split(X,y,test_size=0.2)

# clf = neighbors.KNeighborsClassifier

# clf.fit(x_train, y_train)

# accuracy = clf.score(x_test, y_test)

# print(accuracy)

# Split the data into features (X) and target variable (y)
X = np.array(df.drop(['class'], axis=1))
y = np.array(df['class'])

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2)

# Initialize and train the KNN classifier
clf = KNeighborsClassifier()
clf.fit(X_train, y_train)

# Evaluate the classifier on the test set
accuracy = clf.score(X_test, y_test)
print('Accuracy:', accuracy*100,'%')

# testing the model

example_measures = np.array([[4,2,1,1,1,2,3,2,1],[3,2,2,2,2,2,2,1,1]])
example_measures = example_measures.reshape(len(example_measures),-1)

prediction = clf.predict(example_measures)
print(prediction)

# #Euclidean Distance
# # Euclidean is a popular mathmetician the father of geometry. The book 'Euclid's element' bible for the mathemetican and scientists
# def inside(a,b,i):
  
#   count = ((a[i]-b[i])**2)
#   if i==len(a)-1:
#     i+=1
#     result = count + inside(a,b,i)
#     return result
    
    





# plot = [1,3]
# plot2 = [2,5]
# i = 0
# euclidean_d = sqrt(inside(plot,plot2,i))
# print(euclidean_d)